<Window x:Class="TourPlanner.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:TourPlanner.ViewModels"
        xmlns:views="clr-namespace:TourPlanner.Views"
        mc:Ignorable="d"
        Title="Tour Planner"
        Height="450"
        Width="800">

    <Window.DataContext>
        <vm:MainViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <ContextMenu x:Key="ExportContextMenu">
            <MenuItem Header="Summary Report" Command="{Binding ReportViewModel.GenerateSummaryReportCommand}" />
            <MenuItem Header="Tour Report" Command="{Binding ReportViewModel.GenerateTourReportCommand}" IsEnabled="{Binding ReportViewModel.IsSelectedTour}" />
        </ContextMenu>
        <ContextMenu x:Key="FileContextMenu">
            <MenuItem Header="Export Tour" Command="{Binding TourViewModel.ExportCommand}" />
            <MenuItem Header="Import Tour" Command="{Binding TourViewModel.ImportCommand}"/>
        </ContextMenu>
    </Window.Resources>

    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <!-- Menu Bar -->
        <Menu Grid.Row="0" Grid.ColumnSpan="2">
            <MenuItem Header="PDF Export">
                <MenuItem Header="Summary Report" Command="{Binding ReportViewModel.GenerateSummaryReportCommand}" />
                <MenuItem Header="Tour Report" Command="{Binding ReportViewModel.GenerateTourReportCommand}" IsEnabled="{Binding ReportViewModel.IsSelectedTour}" />
            </MenuItem>
            <MenuItem Header="File">
                <MenuItem Header="Export Tour" Command="{Binding TourViewModel.ExportCommand}" />
                <MenuItem Header="Import Tour" Command="{Binding TourViewModel.ImportCommand}" />
            </MenuItem>
        </Menu>

        <Grid Grid.Row="0" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0" Margin="0,0,10,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBox Grid.Column="0" Text="{Binding TourViewModel.SearchText, UpdateSourceTrigger=PropertyChanged}" Padding="5" Width ="200" HorizontalAlignment="Right"/>

                <Button Grid.Column="1" Margin="5,0" Background="Transparent" BorderThickness="0" Command="{Binding TourViewModel.SearchCommand}">
                    <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE721;" FontSize="13"/>
                </Button>
            </Grid>
        </Grid>
    <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="0,20,0,5" HorizontalAlignment="Left">
            <Button Content="+" Command="{Binding TourViewModel.AddCommand}" Margin="5" Width="30">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="#007ACC"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="Padding" Value="10, 1"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#3399FF"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Content="-" Command="{Binding TourViewModel.DeleteCommand}" Margin="5">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="#FF3333"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="Padding" Value="10,5"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#CC0000"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Content="..." Command="{Binding TourViewModel.UpdateCommand}" Margin="5" Foreground="#FF140D0D" Click="Button_Click">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="#007ACC"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="Padding" Value="10,5"/>
                        <Setter Property="BorderThickness" Value="1"/>
                    </Style>
                </Button.Style>
            </Button>
           
        </StackPanel>

        <Border Grid.Row="2" BorderBrush="Black" BorderThickness="1" Width="200" Height="Auto" HorizontalAlignment="Left" VerticalAlignment="Stretch" Margin="0,0,0,0">
            <ListBox x:Name="tourListBox" ItemsSource="{Binding TourViewModel.FilteredTours}" SelectedItem="{Binding TourViewModel.SelectedTour}" SelectionChanged="ListBox_SelectionChanged" Height="Auto" VerticalAlignment="Stretch" Background="#F5F5F5">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <DockPanel>
                            <Expander IsExpanded="False" Header="{Binding Name}" Margin="5,0,0,0" Width="Auto" Background="Transparent">
                                <StackPanel>
                                    <Border BorderBrush="Black" BorderThickness="0,0,0,1">
                                        <TextBlock FontWeight="Bold" Text="Description:" Margin="0,5,0,0" />
                                    </Border>
                                    <TextBlock Text="{Binding Description}" Margin="10,0,0,0" TextWrapping="Wrap" />
                                    <Border BorderBrush="Black" BorderThickness="0,0,0,1">
                                        <TextBlock FontWeight="Bold" Text="From:" Margin="0,5,0,0" />
                                    </Border>
                                    <TextBlock Text="{Binding From}" Margin="10,0,0,0" TextWrapping="Wrap" />
                                    <Border BorderBrush="Black" BorderThickness="0,0,0,1">
                                        <TextBlock FontWeight="Bold" Text="To:" Margin="0,5,0,0" />
                                    </Border>
                                    <TextBlock Text="{Binding To}" Margin="10,0,0,0" TextWrapping="Wrap" />
                                    <Border BorderBrush="Black" BorderThickness="0,0,0,1">
                                        <TextBlock FontWeight="Bold" Text="Transport Type:" Margin="0,5,0,0" />
                                    </Border>
                                    <TextBlock Text="{Binding TransportType}" Margin="10,0,0,0" TextWrapping="Wrap" />
                                    <Border BorderBrush="Black" BorderThickness="0,0,0,1">
                                        <TextBlock FontWeight="Bold" Text="Distance:" Margin="0,5,0,0" />
                                    </Border>
                                    <TextBlock Text="{Binding Distance}" Margin="10,0,0,0" TextWrapping="Wrap" />
                                    <Border BorderBrush="Black" BorderThickness="0,0,0,1">
                                        <TextBlock FontWeight="Bold" Text="Estimated Time:" Margin="0,5,0,0" />
                                    </Border>
                                    <TextBlock Text="{Binding EstimatedTime}" Margin="10,0,0,0" TextWrapping="Wrap" />
                                </StackPanel>
                            </Expander>
                        </DockPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Border>



        <!-- Tabs and Map Section -->
        <TabControl Grid.Row="1" Margin="205,40,0,167" Grid.RowSpan="2">

            <TabItem Header="Route">
                <!-- Map Display -->

            </TabItem>
            <TabItem Header="General">
                <StackPanel Orientation="Horizontal" Margin="5">
                    <TextBlock Text="Popularity:" FontWeight="Bold" Margin="0,0,5,0"/>
                    <TextBlock Text="{Binding TourViewModel.SelectedTour.Popularity}" Margin="0,0,10,0"/>
                    <TextBlock Text="Child Friendliness:" FontWeight="Bold" Margin="0,0,5,0"/>
                    <TextBlock Text="{Binding TourViewModel.SelectedTour.ChildFriendliness}" Margin="0,0,10,0"/>

                </StackPanel>
            </TabItem>

        </TabControl>


        <StackPanel Grid.Row="2"  Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Content="+" Command="{Binding TourLogViewModel.AddTourLogCommand}" Margin="5" Width="30" Height="30">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="#007ACC" />
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="Padding" Value="10, 1" />
                        <Setter Property="BorderThickness" Value="1" />
                    </Style>
                </Button.Style>
            </Button>
            <Button Content="-" Command="{Binding TourLogViewModel.DeleteTourLogCommand}" Margin="5" Width="30" Height="30" Foreground="Black">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="#007ACC" />
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="Padding" Value="10, 1" />
                        <Setter Property="BorderThickness" Value="1" />
                    </Style>
                </Button.Style>
            </Button>
            <Button Content="..." Command="{Binding TourLogViewModel.UpdateTourLogCommand}" Margin="5" Width="30" Height="30" Foreground="Black">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="#007ACC" />
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="Padding" Value="10, 1" />
                        <Setter Property="BorderThickness" Value="1" />
                    </Style>
                </Button.Style>
            </Button>
        </StackPanel>

        <ListView x:Name="tourLogListView" Grid.Row="2" Grid.Column="0" BorderBrush="Black" BorderThickness="1" Width="Auto" Height="Auto" ItemsSource="{Binding TourLogViewModel.SelectedTour.TourLogs}" SelectedItem="{Binding TourLogViewModel.SelectedTourLog}" Margin="205,180,0,0" SelectionChanged="ListView_SelectionChanged">
            <ListView.View>
                <GridView>
                    <GridViewColumn DisplayMemberBinding="{Binding Path=DateTime}" Header="Date" />
                    <GridViewColumn DisplayMemberBinding="{Binding Path=Comment}" Header="Comment" />
                    <GridViewColumn DisplayMemberBinding="{Binding Path=Difficulty}" Header="Difficulty" />
                    <GridViewColumn DisplayMemberBinding="{Binding Path=TotalDistance}" Header="Total Distance" />
                    <GridViewColumn DisplayMemberBinding="{Binding Path=TotalTime}" Header="Total Time" />
                    <GridViewColumn DisplayMemberBinding="{Binding Path=Rating}" Header="Rating" />
                </GridView>
            </ListView.View>
        </ListView>
    </Grid>
</Window>